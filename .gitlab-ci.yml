variables:
  GOPATH: "$CI_PROJECT_DIR/.go"

cache:
  paths:
    - .go/pkg/mod

build:
  stage: build
  image: golang:1.11.5
  script:
    - make install

test:
  image: golang:1.11.5
  script:
    - GOFLAGS=-cover make test
  after_script:
    - set -e
    - echo "--> Concatenating reports:"
    - PKGS=$(go list ./...)
    - echo PKGS
    - set -e
    - echo "mode atomic" > coverage.txt
    - for pkg in ${PKGS[@]}; do
        go test -v -timeout 30m -race -coverprofile=profile.out -covermode=atomic -tags='ledger test_ledger_mock' "$pkg"
        if [ -f profile.out ]; then
          tail -n +2 profile.out >> coverage.txt;
          rm profile.out
        fi
      done
    - export CODECOV_TOKEN="ae4050d3-73ab-4ad4-957e-1355539e669f"
    - bash <(curl -s https://codecov.io/bash) -f coverage.txt

#integration_test:
#  image: golang:1.11.5
#  services:
#    - mdillon/postgis:11
#  script:
#    - GOFLAGS=-cover make test
#  coverage: '/\d+.\d+% of statements/'
#  artifacts:
#    reports:
#      junit: "TEST_*.xml"

#lint:
#  image: golang:1.11.5
#  script:
#    - make lint
