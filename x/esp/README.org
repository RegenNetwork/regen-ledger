#+TITLE: ESP module

* Overview

The ESP (ecological state protocol) module provides a global geo-tagged, ledger of ecological health.

ESP's are managed by curating organizations (managed by the [[../agent/README.org][agent]] module) and can evolve through 
various versions as the curating organization refines its verification methodology. Curators are responsible for 
defining approved verifiers and a schema for ESP results.

All ESP results include a geo-polygon that allows the data stored in the ESP result registry to be projected onto a map
for visualization of global ecological health.

* Motivation and Rationale

* Transaction Messages and Types
  
#+BEGIN_SRC go
type ESPVersionID []byte

type ESPVersionSpec {
	Curator agent.AgentID `json:"curator"`
	Name string `json:"name"`
	Version string `json:"version"`
	Verifiers []action.ActorID `json:"verifiers"`
  // TODO ClaimSchema schema.SchemaID??
}

type ESPResult struct {
  ESP ESPVersionID
	Verifier action.ActorID `json:"verifier"`
  Geo geo.GeoID
  Claim data.DataID
}

type ActionRegisterESPVersion struct {
	Curator agent.AgentID `json:"curator"`
	Name string `json:"name"`
	Version string `json:"version"`
	Verifiers []action.ActorID `json:"verifiers"`
}

type ActionReportESPResult struct {
  ESP ESPVersionID
  Geo geo.GeoID
  Claim data.DataID
}
#+END_SRC go

* Identifiers
  ESP's are identified by the URI formed by taking the agent URI and appending ~/esp/<name>/<version>+<block-number>~.

* Indexing and Queries
