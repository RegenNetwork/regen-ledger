#+TITLE: Token Module
*STATUS: In Process*

#+BEGIN_SRC go :tangle types.go :exports none
  /* GENERATED FROM README.org
     DO NOT EDIT THIS FILE DIRECTLY!!!!! */
  package group

  import (
    sdk "github.com/cosmos/cosmos-sdk/types"
  )
#+END_SRC

#+BEGIN_SRC sql :tangle token.sql :exports none
  /* GENERATED FROM README.org
     DO NOT EDIT THIS FILE DIRECTLY!!!!! */
#+END_SRC

* Overview
  The ~token~ module is allows for the creation of new fungible tokens. In the current design, all new tokens must be approved by the consortium as their are a limited number of available token names (or denominations) and we do not wish to create a secondary market for token symbol names (as in the domain name system).
  
* TODO Motivation
  
* Transaction Messages and Types
** Create Token

#+BEGIN_SRC go :tangle types.go
  type ActionCreateToken interface {
    Denom string
    Minter sdk.AccAddress
    InitialBalances []InitialBalance
  }

  type InitialBalance interface {
    Address sdk.AccAddress
    Balance sdk.Int
  }
#+END_SRC
** Mint Token

#+BEGIN_SRC go :tangle types.go
  type ActionMint interface {
    Denom string
    To sdk.AccAddress
    Amount sdk.Int
  }

  type MintCapability interface {
    Denom string
  }
#+END_SRC

* Identifiers
  Tokens are identifier by their denomination string. This may evolve as Cosmos solidifies their IBC specification.
  
* Indexing and Queries
** ~get-supply~ query
   Returns the number of tokens of a given denomination currently in circulation.
   
** Postgresql
#+BEGIN_SRC sql :tangle group.sql
  CREATE TABLE token (
    denom text NOT NULL PRIMARY KEY,
    supply NUMERIC NOT NULL,
    minter text NOT NULL
  );
#+END_SRC

* TODO Rationale
  
